to convert a text into vs code style theme we use shiki

1- npm install shiki

2- on lib create a new file called lib/highlighter.ts
import { codeToHtml } from 'shiki';

export async function highlightCode(
  code: string,
  lang: string = 'ts',
  mode: 'Dark Mode' | 'Light Mode' | 'Device Mode' = 'Device Mode'
) {
  const isDark =
    mode === 'Dark Mode' ||
    (mode === 'Device Mode' &&
      typeof window !== 'undefined' &&
      window.matchMedia('(prefers-color-scheme: dark)').matches);

  const theme = isDark ? 'slack-dark' : 'github-light';
  
  // Count the number of lines in the code
  const totalLines = code.split('\n').length;

  return await codeToHtml(code, {
    lang,
    theme,
    transformers: [
      {
        line(this, node, lineNumber) {
          const isFirstLine = lineNumber === 1;
          const isLastLine = lineNumber === totalLines;
          
          return {
            ...node,
            children: [
              {
                type: 'element',
                tagName: 'span',
                properties: {
                  class: ['line-number'],
                  style: `
                    display: inline-block;
                    width: 2em;
                    user-select: none;
                    opacity: 0.4;
                    margin-left: 20px;
                    ${isFirstLine ? 'margin-top: 20px;' : ''}
                    ${isLastLine ? 'margin-bottom: 20px;' : ''}
                  `,
                },
                children: [{ type: 'text', value: String(lineNumber) }],
              },
              ...(node.children || []),
            ],
          };
        },
      },
    ],
  });
}

you can choose your theme 

 Dark Themes
'vitesse-dark'

'github-dark'

'github-dark-dimmed'

'monokai'

'monokai-dark'

'one-dark-pro'

'nord'

'dracula'

'tokyo-night-dark'

'tokyo-night-storm'

'slack-dark'

'min-dark'

'rose-pine-dawn'

'catppuccin-mocha'

☀️ Light Themes
'vitesse-light'

'github-light'

'light-plus'

'min-light'

'slack-ochin'

'tokyo-night-light'

'rose-pine'

'catppuccin-latte'



3- use it on a server component
import { fetchStepsByPartSlug } from '@/app/api/content/steps/route';
import StepCard from '@/components/StepCard';
import { highlightCode } from '@/lib/highlight';


export default async function Page({ params }: { params: { partSlug: string } }) {
  const data = await fetchStepsByPartSlug(params.partSlug);
  if (!data) return <p>Not found</p>;

  const stepsWithHtml = await Promise.all(
    data.steps.map(async step => ({
      ...step,
      codeHtml: step.code ? await highlightCode(step.code, 'ts') : null
    }))
  );

  return (
    <div>
      <h1 className='text-xl font-bold dark:text-white'>{data.part.name}</h1>
      <div className='mt-6 space-y-4'>
        {stepsWithHtml.map(step => (
          
          <StepCard key={step.id} step={step} />
        ))}
      </div>
    </div>
  );
}


4- on the client component that you import on the server component:
'use client';

import { useEffect, useState } from 'react';
import { Button } from '@/components/ui/button';
import { Copy, Check } from 'lucide-react';
import { highlightCode } from '@/lib/highlight'; // your function
import { useTheme } from './ThemeProvider';

import dynamic from 'next/dynamic';
const MotionDiv = dynamic(() =>
  import('framer-motion').then((mod) => mod.motion.div),
  { ssr: false }
);

export default function StepCard({ step }: { step: any }) {
  const [copied, setCopied] = useState(false);
  const [highlightedCode, setHighlightedCode] = useState('');
  const { mode } = useTheme(); // <-- use your theme here

  const handleCopy = async () => {
    if (step.code) {
      await navigator.clipboard.writeText(step.code);
      setCopied(true);
      setTimeout(() => setCopied(false), 1500);
    }
  };

  useEffect(() => {
    if (step.code) {
      highlightCode(step.code, step.lang || 'ts', mode).then(setHighlightedCode);
    }
  }, [step.code, step.lang, mode]); // re-run if theme changes

  return (
    <div className='p-4 rounded-lg dark:text-white'>
      <MotionDiv
        initial={{ opacity: 0, y: 30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.3, duration: 1 }}
        className=""
      >
        <h2 className='font-semibold text-lg'>
          Step {step.order}: {step.title}
        </h2>        
      </MotionDiv>

      <MotionDiv
        initial={{ opacity: 0, y: 30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.6, duration: 1 }}
        className=""
      >
        <p className='text-gray dark:text-gray-300 mt-2'>{step.description}</p>
      </MotionDiv>

      <MotionDiv
        initial={{ opacity: 0, y: 30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.9, duration: 1 }}
        className=""
      >
        {highlightedCode && (
          <div className='flex flex-col border dark:border-gray-700 bg-[#f8f8f8] dark:bg-[#0c0c0c] mt-2 rounded overflow-auto'>
            <div className='py-3 px-4 flex flex-row items-center justify-between border-b dark:border-gray-700'>
              <p className='dark:text-gray-300'>{step.filePath}</p>
              <Button
                title={copied ? 'Copied' : 'Copy'}
                onClick={handleCopy}
                className='bg-inherit hover:dark:bg-[#1f1f1f] hover:bg-[#e2e2e2]'
              >
                {copied ? <Check className='size-5 text-green-500' /> : <Copy className='size-5' />}
              </Button>
            </div>
            <div
              className="shiki  overflow-auto text-sm"
              dangerouslySetInnerHTML={{ __html: highlightedCode }}
            />
          </div>
        )}
      </MotionDiv>


      <MotionDiv
        initial={{ opacity: 0, y: 30 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 1.2, duration: 1 }}
        className=""
      >
        {step.resources && (
          <div className='mt-5'>
            <a
              href={step.resources}
              target='_blank'
              rel='noopener noreferrer'
              className='underline text-blue-100 underline-offset-4'
            >
              Read More
            </a>
          </div>
        )}
      </MotionDiv>
    </div>
  );
}


